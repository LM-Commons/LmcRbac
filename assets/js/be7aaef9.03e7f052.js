"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4737],{5175:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var i=t(4848),o=t(8453);const a={title:"Integrating into applications"},s=void 0,r={id:"Guides/integrating",title:"Integrating into applications",description:"LmcRbac can be used in your application to implement role-based access control.",source:"@site/versioned_docs/version-2.0/Guides/integrating.md",sourceDirName:"Guides",slug:"/Guides/integrating",permalink:"/LmcRbac/docs/2.0/Guides/integrating",draft:!1,unlisted:!1,editUrl:"https://github.com/lm-commons/lmcrbac/tree/master/docs/versioned_docs/version-2.0/Guides/integrating.md",tags:[],version:"2.0",frontMatter:{title:"Integrating into applications"},sidebar:"documentationSidebar",previous:{title:"Configuration",permalink:"/LmcRbac/docs/2.0/configuration"},next:{title:"From v1 to v2",permalink:"/LmcRbac/docs/2.0/Upgrading/to-v2"}},c={},d=[{value:"Laminas MVC applications",id:"laminas-mvc-applications",level:2},{value:"Other Laminas MVC components to use",id:"other-laminas-mvc-components-to-use",level:3},{value:"Mezzio and PSR-7 applications",id:"mezzio-and-psr-7-applications",level:2},{value:"Other Mezzio components to use",id:"other-mezzio-components-to-use",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"LmcRbac can be used in your application to implement role-based access control."}),"\n",(0,i.jsxs)(n.p,{children:["However, it is important to note that Authorization service ",(0,i.jsx)(n.code,{children:"isGranted()"})," method expects\nan identity to be provided. The identity must also implement the ",(0,i.jsx)(n.code,{children:"Lmc\\Rbac\\Identity\\IdentityInterface"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"User authentication is not in the scope of LmcRbac and must be implemented by your application."}),"\n",(0,i.jsx)(n.h2,{id:"laminas-mvc-applications",children:"Laminas MVC applications"}),"\n",(0,i.jsxs)(n.p,{children:["In a Laminas MVC application, you can use the ",(0,i.jsx)(n.a,{href:"https://docs.laminas.dev/laminas-authentication",children:"'laminas-authentication'"}),"\ncomponent with an appropriate adapter to provide the identity."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Laminas\\Authentication\\AuthenticationService"})," service provides the identity using the ",(0,i.jsx)(n.code,{children:"getIdentity()"})," method.\nHowever, it is not prescriptive on the signature of the returned identity object. It is up to the\nauthentication adapter to return a authentication result that contains an identity object that implements the\n",(0,i.jsx)(n.code,{children:"IdentityInterface"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"<?php\nnamespace MyApp;\n\nuse \\Laminas\\Authentication\\AuthenticationService;\nuse \\Lmc\\Rbac\\Service\\AuthorizationServiceAwareTrait;\n\nclass MyClass\n{\n    use AuthorizationServiceAwareTrait;\n    protected AuthenticationService $authenticationService;\n    \n    public function __construct($authenticationService, $authorizationService) \n    {\n        $this->authenticationService = $authenticationService;\n        $this->authorizationService = $authorizationService;\n    }\n    \n    public function doSomething() \n    {\n        $identity = $this->authenticationService->hasIdentity() ? $this->authenticationService->getIdentity() : null;\n        \n        // Check for permission\n        if ($this->getAuthorizationService()->isGranted($identity, 'somepermssion')) {\n            // authorized\n        } else {\n            // not authorized\n        }\n    }\n    \n}\n\n"})}),"\n",(0,i.jsx)(n.h3,{id:"other-laminas-mvc-components-to-use",children:"Other Laminas MVC components to use"}),"\n",(0,i.jsxs)(n.p,{children:["To facilitate integration in an MVC application, you can use ",(0,i.jsx)(n.a,{href:"https://lm-commons.github.io/LmcUser/",children:"LmcUser"})," for\nauthentication."]}),"\n",(0,i.jsxs)(n.p,{children:["You can also use ",(0,i.jsx)(n.a,{href:"https://lm-commons.github.io/LmcRbacMvc/",children:"LmcRbacMvc"})," which extends LmcRbac by handling identities.\nIt also provides additional functionalities like route guards and strategies for handling unauthorized access. For example,\nan unauthorized strategy could be to redirect to a login page."]}),"\n",(0,i.jsx)(n.h2,{id:"mezzio-and-psr-7-applications",children:"Mezzio and PSR-7 applications"}),"\n",(0,i.jsxs)(n.p,{children:["In a Mezzio application, you can use the ",(0,i.jsx)(n.a,{href:"https://docs.mezzio.dev/mezzio-authentication/",children:(0,i.jsx)(n.code,{children:"mezzio/mezzio-authentication"})}),"\ncomponent to provide the identity. ",(0,i.jsx)(n.code,{children:"mezzio/mezzio-authentication"})," will add a ",(0,i.jsx)(n.code,{children:"UserInterface"})," object to the request attributes."]}),"\n",(0,i.jsxs)(n.p,{children:["Although the ",(0,i.jsx)(n.code,{children:"UserInterface"})," interface has a ",(0,i.jsx)(n.code,{children:"getRoles"})," method, LmcRbac's ",(0,i.jsx)(n.code,{children:"AuthorizationService"})," still expects the identity\nto implement the ",(0,i.jsx)(n.code,{children:"IdentityInterface"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["This can be overcome by providing ",(0,i.jsx)(n.code,{children:"mezzio/mezzio-authentication"})," with a custom factory to instantiate a user object that\nimplements the ",(0,i.jsx)(n.code,{children:"IdentityInterface"})," as explained in this ",(0,i.jsx)(n.a,{href:"https://docs.mezzio.dev/mezzio-authentication/v1/intro/",children:"section"}),"\nof the ",(0,i.jsx)(n.code,{children:"mezzio/mezzio-authentication"})," documentation."]}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"<?php\nnamespace MyApp;\n\nuse \\Lmc\\Rbac\\Identity\\IdentityInterface;\nuse \\Mezzio\\Authentication\\UserInterface;\n\nclass MyUser implements UserInterface, IdentityInterface \n{\n    private string $identity;\n    private $roles;\n    private $details;\n\n    public function __construct(string $identity, array $roles = [], array $details = [])\n    {\n        $this->identity = $identity;\n        $this->roles    = $roles;\n        $this->details  = $details;\n    }\n\n    public function getIdentity(): string\n    {\n        return $this->identity;\n    }\n\n    public function getRoles(): array\n    {\n        return $this->roles;\n    }\n\n    public function getDetails(): array\n    {\n        return $this->details;\n    }\n\n    public function getDetail(string $name, $default = null)\n    {\n        return $this->details[$name] ?? $default;\n    }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then provide a factory for creating the user class somewhere in a config provider:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"<?php\nuse \\Mezzio\\Authentication\\UserInterface;\nuse MyUser;\n    // ... \n    return [\n        'factories' => [\n            UserInterface => function (string $identity, array $roles = [], array $details = []): UserInterface {\n                return new MyUser($identity, $roles, $details);\n                }; \n        ],\n    ];\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["From this point, assuming that you have configured your application to use the ",(0,i.jsx)(n.code,{children:"Mezzio\\Authentication\\AuthenticationMiddleware"}),",\nyou can use ",(0,i.jsx)(n.code,{children:"MyUser"})," in your handler by retrieving it from the request:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"// Retrieve the UserInterface object from the request.\n$user = $request->getAttribute(UserInterface::class);\n\n// Check for permission, this works because $user implements IdentityInterface\nif ($this->getAuthorizationService()->isGranted($user, 'somepermssion')) {\n    // authorized\n} else {\n    // not authorized\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"How you define roles and permissions in your application is up to you. One way would be to use the route name as\na permission such that authorization can be set up based on routes and optionally on route+verb."}),"\n",(0,i.jsx)(n.h3,{id:"other-mezzio-components-to-use",children:"Other Mezzio components to use"}),"\n",(0,i.jsx)(n.p,{children:"A LmcRbac Mezzio component is under development to provide factories and middleware to facilitate integration of LmcRbac\nin Mezzio applications."})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(6540);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);